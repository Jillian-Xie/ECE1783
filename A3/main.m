clc; clear; close all;

% config info
yuvInputFileName = 'CIF.yuv';
nFrame = 3;
width  = uint32(352);
height = uint32(288);
blockSize = 16;
r = 4;
QPs = [1 2 3 4 5 6 7 8 9 10 11];
QP = 4;
I_Period = 1;
Lambda = getLambda(QP);

nRefFrames = 1;
VBSEnable = true;
FMEEnable = true;
FastME = true;

RCFlag = true;
targetBR = 1140480; % bps
frameRate = 30;

visualizeVBS = VBSEnable && true;
visualizeRGB = true;
visualizeMM = true;
visualizeNRF= true;

if RCFlag
    % statistics{1} -> IFrame  statistics{2} -> PFrame
    % load statistics from file
    % load('statistics.mat', 'statistics');

    % or get statistics
    statistics = {};

    statistics{1} = getStatistics(struct( ...
        'yuvInputFileName', yuvInputFileName, ...
        'nFrame', nFrame, ...
        'width', width, ...
        'height', height, ...
        'blockSize', blockSize, ...
        'r', r, ...
        'QP', 4, ...
        'QPs', QPs, ...
        'I_Period', 1, ...
        'nRefFrames', nRefFrames, ...
        'VBSEnable', VBSEnable, ...
        'FMEEnable', FMEEnable, ...
        'FastME', FastME, ...
        'visualizeVBS', false, ...
        'visualizeRGB', false, ...
        'visualizeMM', false, ...
        'visualizeNRF', false ...        
        ));

    statistics{2} = getStatistics(struct( ...
        'yuvInputFileName', yuvInputFileName, ...
        'nFrame', nFrame, ...
        'width', width, ...
        'height', height, ...
        'blockSize', blockSize, ...
        'r', r, ...
        'QP', 4, ...
        'QPs', QPs, ...
        'I_Period', 21, ...
        'nRefFrames', nRefFrames, ...
        'VBSEnable', VBSEnable, ...
        'FMEEnable', FMEEnable, ...
        'FastME', FastME, ...
        'visualizeVBS', false, ...
        'visualizeRGB', false, ...
        'visualizeMM', false, ...
        'visualizeNRF', false ...
        ));

    save('statistics');
end

% encoder
tic
reconstructedY = encoder(yuvInputFileName, nFrame, width, height, blockSize, ...
    r, QP, I_Period, nRefFrames, VBSEnable, FMEEnable, FastME, RCFlag, ...
    targetBR, frameRate, QPs, statistics);
toc

load('QTCCoeffs.mat', 'QTCCoeffs');
load('MDiffs.mat', 'MDiffs');
load('splits.mat', 'splits');
load('QPFrames.mat', 'QPFrames');


% decoder
tic
decoder(nFrame, width, height, blockSize, I_Period, VBSEnable, FMEEnable, ...
    QTCCoeffs, MDiffs, splits, QPFrames, visualizeVBS, visualizeRGB, visualizeMM, ...
    visualizeNRF, reconstructedY);
toc
